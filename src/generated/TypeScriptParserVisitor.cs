//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     ANTLR Version: 4.9.1
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

// Generated from ./TypeScriptParser.g4 by ANTLR 4.9.1

// Unreachable code detected
#pragma warning disable 0162
// The variable '...' is assigned but its value is never used
#pragma warning disable 0219
// Missing XML comment for publicly visible type or member '...'
#pragma warning disable 1591
// Ambiguous reference in cref attribute
#pragma warning disable 419

using Antlr4.Runtime.Misc;
using Antlr4.Runtime.Tree;
using IToken = Antlr4.Runtime.IToken;

/// <summary>
/// This interface defines a complete generic visitor for a parse tree produced
/// by <see cref="TypeScriptParser"/>.
/// </summary>
/// <typeparam name="Result">The return type of the visit operation.</typeparam>
[System.CodeDom.Compiler.GeneratedCode("ANTLR", "4.9.1")]
[System.CLSCompliant(false)]
public interface ITypeScriptParserVisitor<Result> : IParseTreeVisitor<Result> {
	/// <summary>
	/// Visit a parse tree produced by <see cref="TypeScriptParser.initializer"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitInitializer([NotNull] TypeScriptParser.InitializerContext context);
	/// <summary>
	/// Visit a parse tree produced by <see cref="TypeScriptParser.bindingPattern"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitBindingPattern([NotNull] TypeScriptParser.BindingPatternContext context);
	/// <summary>
	/// Visit a parse tree produced by <see cref="TypeScriptParser.typeParameters"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitTypeParameters([NotNull] TypeScriptParser.TypeParametersContext context);
	/// <summary>
	/// Visit a parse tree produced by <see cref="TypeScriptParser.typeParameterList"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitTypeParameterList([NotNull] TypeScriptParser.TypeParameterListContext context);
	/// <summary>
	/// Visit a parse tree produced by <see cref="TypeScriptParser.typeParameter"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitTypeParameter([NotNull] TypeScriptParser.TypeParameterContext context);
	/// <summary>
	/// Visit a parse tree produced by <see cref="TypeScriptParser.constraint"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitConstraint([NotNull] TypeScriptParser.ConstraintContext context);
	/// <summary>
	/// Visit a parse tree produced by <see cref="TypeScriptParser.typeArguments"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitTypeArguments([NotNull] TypeScriptParser.TypeArgumentsContext context);
	/// <summary>
	/// Visit a parse tree produced by <see cref="TypeScriptParser.typeArgumentList"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitTypeArgumentList([NotNull] TypeScriptParser.TypeArgumentListContext context);
	/// <summary>
	/// Visit a parse tree produced by <see cref="TypeScriptParser.typeArgument"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitTypeArgument([NotNull] TypeScriptParser.TypeArgumentContext context);
	/// <summary>
	/// Visit a parse tree produced by <see cref="TypeScriptParser.type_"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitType_([NotNull] TypeScriptParser.Type_Context context);
	/// <summary>
	/// Visit a parse tree produced by the <c>Intersection</c>
	/// labeled alternative in <see cref="TypeScriptParser.unionOrIntersectionOrPrimaryType"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitIntersection([NotNull] TypeScriptParser.IntersectionContext context);
	/// <summary>
	/// Visit a parse tree produced by the <c>Primary</c>
	/// labeled alternative in <see cref="TypeScriptParser.unionOrIntersectionOrPrimaryType"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitPrimary([NotNull] TypeScriptParser.PrimaryContext context);
	/// <summary>
	/// Visit a parse tree produced by the <c>Union</c>
	/// labeled alternative in <see cref="TypeScriptParser.unionOrIntersectionOrPrimaryType"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitUnion([NotNull] TypeScriptParser.UnionContext context);
	/// <summary>
	/// Visit a parse tree produced by the <c>RedefinitionOfType</c>
	/// labeled alternative in <see cref="TypeScriptParser.primaryType"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitRedefinitionOfType([NotNull] TypeScriptParser.RedefinitionOfTypeContext context);
	/// <summary>
	/// Visit a parse tree produced by the <c>PredefinedPrimType</c>
	/// labeled alternative in <see cref="TypeScriptParser.primaryType"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitPredefinedPrimType([NotNull] TypeScriptParser.PredefinedPrimTypeContext context);
	/// <summary>
	/// Visit a parse tree produced by the <c>ArrayPrimType</c>
	/// labeled alternative in <see cref="TypeScriptParser.primaryType"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitArrayPrimType([NotNull] TypeScriptParser.ArrayPrimTypeContext context);
	/// <summary>
	/// Visit a parse tree produced by the <c>ParenthesizedPrimType</c>
	/// labeled alternative in <see cref="TypeScriptParser.primaryType"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitParenthesizedPrimType([NotNull] TypeScriptParser.ParenthesizedPrimTypeContext context);
	/// <summary>
	/// Visit a parse tree produced by the <c>ThisPrimType</c>
	/// labeled alternative in <see cref="TypeScriptParser.primaryType"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitThisPrimType([NotNull] TypeScriptParser.ThisPrimTypeContext context);
	/// <summary>
	/// Visit a parse tree produced by the <c>TuplePrimType</c>
	/// labeled alternative in <see cref="TypeScriptParser.primaryType"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitTuplePrimType([NotNull] TypeScriptParser.TuplePrimTypeContext context);
	/// <summary>
	/// Visit a parse tree produced by the <c>ObjectPrimType</c>
	/// labeled alternative in <see cref="TypeScriptParser.primaryType"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitObjectPrimType([NotNull] TypeScriptParser.ObjectPrimTypeContext context);
	/// <summary>
	/// Visit a parse tree produced by the <c>ReferencePrimType</c>
	/// labeled alternative in <see cref="TypeScriptParser.primaryType"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitReferencePrimType([NotNull] TypeScriptParser.ReferencePrimTypeContext context);
	/// <summary>
	/// Visit a parse tree produced by the <c>QueryPrimType</c>
	/// labeled alternative in <see cref="TypeScriptParser.primaryType"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitQueryPrimType([NotNull] TypeScriptParser.QueryPrimTypeContext context);
	/// <summary>
	/// Visit a parse tree produced by <see cref="TypeScriptParser.predefinedType"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitPredefinedType([NotNull] TypeScriptParser.PredefinedTypeContext context);
	/// <summary>
	/// Visit a parse tree produced by <see cref="TypeScriptParser.typeReference"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitTypeReference([NotNull] TypeScriptParser.TypeReferenceContext context);
	/// <summary>
	/// Visit a parse tree produced by <see cref="TypeScriptParser.nestedTypeGeneric"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitNestedTypeGeneric([NotNull] TypeScriptParser.NestedTypeGenericContext context);
	/// <summary>
	/// Visit a parse tree produced by <see cref="TypeScriptParser.typeGeneric"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitTypeGeneric([NotNull] TypeScriptParser.TypeGenericContext context);
	/// <summary>
	/// Visit a parse tree produced by <see cref="TypeScriptParser.typeIncludeGeneric"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitTypeIncludeGeneric([NotNull] TypeScriptParser.TypeIncludeGenericContext context);
	/// <summary>
	/// Visit a parse tree produced by <see cref="TypeScriptParser.typeName"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitTypeName([NotNull] TypeScriptParser.TypeNameContext context);
	/// <summary>
	/// Visit a parse tree produced by <see cref="TypeScriptParser.objectType"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitObjectType([NotNull] TypeScriptParser.ObjectTypeContext context);
	/// <summary>
	/// Visit a parse tree produced by <see cref="TypeScriptParser.typeBody"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitTypeBody([NotNull] TypeScriptParser.TypeBodyContext context);
	/// <summary>
	/// Visit a parse tree produced by <see cref="TypeScriptParser.typeMemberList"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitTypeMemberList([NotNull] TypeScriptParser.TypeMemberListContext context);
	/// <summary>
	/// Visit a parse tree produced by <see cref="TypeScriptParser.typeMember"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitTypeMember([NotNull] TypeScriptParser.TypeMemberContext context);
	/// <summary>
	/// Visit a parse tree produced by <see cref="TypeScriptParser.arrayType"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitArrayType([NotNull] TypeScriptParser.ArrayTypeContext context);
	/// <summary>
	/// Visit a parse tree produced by <see cref="TypeScriptParser.tupleType"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitTupleType([NotNull] TypeScriptParser.TupleTypeContext context);
	/// <summary>
	/// Visit a parse tree produced by <see cref="TypeScriptParser.tupleElementTypes"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitTupleElementTypes([NotNull] TypeScriptParser.TupleElementTypesContext context);
	/// <summary>
	/// Visit a parse tree produced by <see cref="TypeScriptParser.functionType"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitFunctionType([NotNull] TypeScriptParser.FunctionTypeContext context);
	/// <summary>
	/// Visit a parse tree produced by <see cref="TypeScriptParser.constructorType"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitConstructorType([NotNull] TypeScriptParser.ConstructorTypeContext context);
	/// <summary>
	/// Visit a parse tree produced by <see cref="TypeScriptParser.typeQuery"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitTypeQuery([NotNull] TypeScriptParser.TypeQueryContext context);
	/// <summary>
	/// Visit a parse tree produced by <see cref="TypeScriptParser.typeQueryExpression"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitTypeQueryExpression([NotNull] TypeScriptParser.TypeQueryExpressionContext context);
	/// <summary>
	/// Visit a parse tree produced by <see cref="TypeScriptParser.propertySignatur"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitPropertySignatur([NotNull] TypeScriptParser.PropertySignaturContext context);
	/// <summary>
	/// Visit a parse tree produced by <see cref="TypeScriptParser.typeAnnotation"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitTypeAnnotation([NotNull] TypeScriptParser.TypeAnnotationContext context);
	/// <summary>
	/// Visit a parse tree produced by <see cref="TypeScriptParser.callSignature"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitCallSignature([NotNull] TypeScriptParser.CallSignatureContext context);
	/// <summary>
	/// Visit a parse tree produced by <see cref="TypeScriptParser.parameterList"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitParameterList([NotNull] TypeScriptParser.ParameterListContext context);
	/// <summary>
	/// Visit a parse tree produced by <see cref="TypeScriptParser.requiredParameterList"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitRequiredParameterList([NotNull] TypeScriptParser.RequiredParameterListContext context);
	/// <summary>
	/// Visit a parse tree produced by <see cref="TypeScriptParser.parameter"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitParameter([NotNull] TypeScriptParser.ParameterContext context);
	/// <summary>
	/// Visit a parse tree produced by <see cref="TypeScriptParser.optionalParameter"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitOptionalParameter([NotNull] TypeScriptParser.OptionalParameterContext context);
	/// <summary>
	/// Visit a parse tree produced by <see cref="TypeScriptParser.restParameter"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitRestParameter([NotNull] TypeScriptParser.RestParameterContext context);
	/// <summary>
	/// Visit a parse tree produced by <see cref="TypeScriptParser.requiredParameter"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitRequiredParameter([NotNull] TypeScriptParser.RequiredParameterContext context);
	/// <summary>
	/// Visit a parse tree produced by <see cref="TypeScriptParser.accessibilityModifier"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitAccessibilityModifier([NotNull] TypeScriptParser.AccessibilityModifierContext context);
	/// <summary>
	/// Visit a parse tree produced by <see cref="TypeScriptParser.identifierOrPattern"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitIdentifierOrPattern([NotNull] TypeScriptParser.IdentifierOrPatternContext context);
	/// <summary>
	/// Visit a parse tree produced by <see cref="TypeScriptParser.constructSignature"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitConstructSignature([NotNull] TypeScriptParser.ConstructSignatureContext context);
	/// <summary>
	/// Visit a parse tree produced by <see cref="TypeScriptParser.indexSignature"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitIndexSignature([NotNull] TypeScriptParser.IndexSignatureContext context);
	/// <summary>
	/// Visit a parse tree produced by <see cref="TypeScriptParser.methodSignature"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitMethodSignature([NotNull] TypeScriptParser.MethodSignatureContext context);
	/// <summary>
	/// Visit a parse tree produced by <see cref="TypeScriptParser.typeAliasDeclaration"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitTypeAliasDeclaration([NotNull] TypeScriptParser.TypeAliasDeclarationContext context);
	/// <summary>
	/// Visit a parse tree produced by <see cref="TypeScriptParser.constructorDeclaration"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitConstructorDeclaration([NotNull] TypeScriptParser.ConstructorDeclarationContext context);
	/// <summary>
	/// Visit a parse tree produced by <see cref="TypeScriptParser.interfaceDeclaration"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitInterfaceDeclaration([NotNull] TypeScriptParser.InterfaceDeclarationContext context);
	/// <summary>
	/// Visit a parse tree produced by <see cref="TypeScriptParser.interfaceExtendsClause"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitInterfaceExtendsClause([NotNull] TypeScriptParser.InterfaceExtendsClauseContext context);
	/// <summary>
	/// Visit a parse tree produced by <see cref="TypeScriptParser.classOrInterfaceTypeList"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitClassOrInterfaceTypeList([NotNull] TypeScriptParser.ClassOrInterfaceTypeListContext context);
	/// <summary>
	/// Visit a parse tree produced by <see cref="TypeScriptParser.enumDeclaration"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitEnumDeclaration([NotNull] TypeScriptParser.EnumDeclarationContext context);
	/// <summary>
	/// Visit a parse tree produced by <see cref="TypeScriptParser.enumBody"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitEnumBody([NotNull] TypeScriptParser.EnumBodyContext context);
	/// <summary>
	/// Visit a parse tree produced by <see cref="TypeScriptParser.enumMemberList"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitEnumMemberList([NotNull] TypeScriptParser.EnumMemberListContext context);
	/// <summary>
	/// Visit a parse tree produced by <see cref="TypeScriptParser.enumMember"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitEnumMember([NotNull] TypeScriptParser.EnumMemberContext context);
	/// <summary>
	/// Visit a parse tree produced by <see cref="TypeScriptParser.namespaceDeclaration"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitNamespaceDeclaration([NotNull] TypeScriptParser.NamespaceDeclarationContext context);
	/// <summary>
	/// Visit a parse tree produced by <see cref="TypeScriptParser.namespaceName"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitNamespaceName([NotNull] TypeScriptParser.NamespaceNameContext context);
	/// <summary>
	/// Visit a parse tree produced by <see cref="TypeScriptParser.importAliasDeclaration"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitImportAliasDeclaration([NotNull] TypeScriptParser.ImportAliasDeclarationContext context);
	/// <summary>
	/// Visit a parse tree produced by <see cref="TypeScriptParser.decoratorList"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitDecoratorList([NotNull] TypeScriptParser.DecoratorListContext context);
	/// <summary>
	/// Visit a parse tree produced by <see cref="TypeScriptParser.decorator"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitDecorator([NotNull] TypeScriptParser.DecoratorContext context);
	/// <summary>
	/// Visit a parse tree produced by <see cref="TypeScriptParser.decoratorMemberExpression"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitDecoratorMemberExpression([NotNull] TypeScriptParser.DecoratorMemberExpressionContext context);
	/// <summary>
	/// Visit a parse tree produced by <see cref="TypeScriptParser.decoratorCallExpression"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitDecoratorCallExpression([NotNull] TypeScriptParser.DecoratorCallExpressionContext context);
	/// <summary>
	/// Visit a parse tree produced by <see cref="TypeScriptParser.program"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitProgram([NotNull] TypeScriptParser.ProgramContext context);
	/// <summary>
	/// Visit a parse tree produced by <see cref="TypeScriptParser.sourceElement"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitSourceElement([NotNull] TypeScriptParser.SourceElementContext context);
	/// <summary>
	/// Visit a parse tree produced by <see cref="TypeScriptParser.statement"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitStatement([NotNull] TypeScriptParser.StatementContext context);
	/// <summary>
	/// Visit a parse tree produced by <see cref="TypeScriptParser.block"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitBlock([NotNull] TypeScriptParser.BlockContext context);
	/// <summary>
	/// Visit a parse tree produced by <see cref="TypeScriptParser.statementList"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitStatementList([NotNull] TypeScriptParser.StatementListContext context);
	/// <summary>
	/// Visit a parse tree produced by <see cref="TypeScriptParser.abstractDeclaration"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitAbstractDeclaration([NotNull] TypeScriptParser.AbstractDeclarationContext context);
	/// <summary>
	/// Visit a parse tree produced by <see cref="TypeScriptParser.importStatement"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitImportStatement([NotNull] TypeScriptParser.ImportStatementContext context);
	/// <summary>
	/// Visit a parse tree produced by <see cref="TypeScriptParser.fromBlock"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitFromBlock([NotNull] TypeScriptParser.FromBlockContext context);
	/// <summary>
	/// Visit a parse tree produced by <see cref="TypeScriptParser.multipleImportStatement"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitMultipleImportStatement([NotNull] TypeScriptParser.MultipleImportStatementContext context);
	/// <summary>
	/// Visit a parse tree produced by <see cref="TypeScriptParser.exportStatement"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitExportStatement([NotNull] TypeScriptParser.ExportStatementContext context);
	/// <summary>
	/// Visit a parse tree produced by <see cref="TypeScriptParser.variableStatement"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitVariableStatement([NotNull] TypeScriptParser.VariableStatementContext context);
	/// <summary>
	/// Visit a parse tree produced by <see cref="TypeScriptParser.variableDeclarationList"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitVariableDeclarationList([NotNull] TypeScriptParser.VariableDeclarationListContext context);
	/// <summary>
	/// Visit a parse tree produced by <see cref="TypeScriptParser.variableDeclaration"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitVariableDeclaration([NotNull] TypeScriptParser.VariableDeclarationContext context);
	/// <summary>
	/// Visit a parse tree produced by <see cref="TypeScriptParser.emptyStatement"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitEmptyStatement([NotNull] TypeScriptParser.EmptyStatementContext context);
	/// <summary>
	/// Visit a parse tree produced by <see cref="TypeScriptParser.expressionStatement"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitExpressionStatement([NotNull] TypeScriptParser.ExpressionStatementContext context);
	/// <summary>
	/// Visit a parse tree produced by <see cref="TypeScriptParser.ifStatement"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitIfStatement([NotNull] TypeScriptParser.IfStatementContext context);
	/// <summary>
	/// Visit a parse tree produced by the <c>DoStatement</c>
	/// labeled alternative in <see cref="TypeScriptParser.iterationStatement"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitDoStatement([NotNull] TypeScriptParser.DoStatementContext context);
	/// <summary>
	/// Visit a parse tree produced by the <c>WhileStatement</c>
	/// labeled alternative in <see cref="TypeScriptParser.iterationStatement"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitWhileStatement([NotNull] TypeScriptParser.WhileStatementContext context);
	/// <summary>
	/// Visit a parse tree produced by the <c>ForStatement</c>
	/// labeled alternative in <see cref="TypeScriptParser.iterationStatement"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitForStatement([NotNull] TypeScriptParser.ForStatementContext context);
	/// <summary>
	/// Visit a parse tree produced by the <c>ForVarStatement</c>
	/// labeled alternative in <see cref="TypeScriptParser.iterationStatement"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitForVarStatement([NotNull] TypeScriptParser.ForVarStatementContext context);
	/// <summary>
	/// Visit a parse tree produced by the <c>ForInStatement</c>
	/// labeled alternative in <see cref="TypeScriptParser.iterationStatement"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitForInStatement([NotNull] TypeScriptParser.ForInStatementContext context);
	/// <summary>
	/// Visit a parse tree produced by the <c>ForVarInStatement</c>
	/// labeled alternative in <see cref="TypeScriptParser.iterationStatement"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitForVarInStatement([NotNull] TypeScriptParser.ForVarInStatementContext context);
	/// <summary>
	/// Visit a parse tree produced by <see cref="TypeScriptParser.varModifier"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitVarModifier([NotNull] TypeScriptParser.VarModifierContext context);
	/// <summary>
	/// Visit a parse tree produced by <see cref="TypeScriptParser.continueStatement"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitContinueStatement([NotNull] TypeScriptParser.ContinueStatementContext context);
	/// <summary>
	/// Visit a parse tree produced by <see cref="TypeScriptParser.breakStatement"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitBreakStatement([NotNull] TypeScriptParser.BreakStatementContext context);
	/// <summary>
	/// Visit a parse tree produced by <see cref="TypeScriptParser.returnStatement"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitReturnStatement([NotNull] TypeScriptParser.ReturnStatementContext context);
	/// <summary>
	/// Visit a parse tree produced by <see cref="TypeScriptParser.yieldStatement"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitYieldStatement([NotNull] TypeScriptParser.YieldStatementContext context);
	/// <summary>
	/// Visit a parse tree produced by <see cref="TypeScriptParser.withStatement"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitWithStatement([NotNull] TypeScriptParser.WithStatementContext context);
	/// <summary>
	/// Visit a parse tree produced by <see cref="TypeScriptParser.switchStatement"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitSwitchStatement([NotNull] TypeScriptParser.SwitchStatementContext context);
	/// <summary>
	/// Visit a parse tree produced by <see cref="TypeScriptParser.caseBlock"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitCaseBlock([NotNull] TypeScriptParser.CaseBlockContext context);
	/// <summary>
	/// Visit a parse tree produced by <see cref="TypeScriptParser.caseClauses"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitCaseClauses([NotNull] TypeScriptParser.CaseClausesContext context);
	/// <summary>
	/// Visit a parse tree produced by <see cref="TypeScriptParser.caseClause"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitCaseClause([NotNull] TypeScriptParser.CaseClauseContext context);
	/// <summary>
	/// Visit a parse tree produced by <see cref="TypeScriptParser.defaultClause"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitDefaultClause([NotNull] TypeScriptParser.DefaultClauseContext context);
	/// <summary>
	/// Visit a parse tree produced by <see cref="TypeScriptParser.labelledStatement"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitLabelledStatement([NotNull] TypeScriptParser.LabelledStatementContext context);
	/// <summary>
	/// Visit a parse tree produced by <see cref="TypeScriptParser.throwStatement"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitThrowStatement([NotNull] TypeScriptParser.ThrowStatementContext context);
	/// <summary>
	/// Visit a parse tree produced by <see cref="TypeScriptParser.tryStatement"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitTryStatement([NotNull] TypeScriptParser.TryStatementContext context);
	/// <summary>
	/// Visit a parse tree produced by <see cref="TypeScriptParser.catchProduction"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitCatchProduction([NotNull] TypeScriptParser.CatchProductionContext context);
	/// <summary>
	/// Visit a parse tree produced by <see cref="TypeScriptParser.finallyProduction"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitFinallyProduction([NotNull] TypeScriptParser.FinallyProductionContext context);
	/// <summary>
	/// Visit a parse tree produced by <see cref="TypeScriptParser.debuggerStatement"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitDebuggerStatement([NotNull] TypeScriptParser.DebuggerStatementContext context);
	/// <summary>
	/// Visit a parse tree produced by <see cref="TypeScriptParser.functionDeclaration"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitFunctionDeclaration([NotNull] TypeScriptParser.FunctionDeclarationContext context);
	/// <summary>
	/// Visit a parse tree produced by <see cref="TypeScriptParser.classDeclaration"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitClassDeclaration([NotNull] TypeScriptParser.ClassDeclarationContext context);
	/// <summary>
	/// Visit a parse tree produced by <see cref="TypeScriptParser.classHeritage"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitClassHeritage([NotNull] TypeScriptParser.ClassHeritageContext context);
	/// <summary>
	/// Visit a parse tree produced by <see cref="TypeScriptParser.classTail"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitClassTail([NotNull] TypeScriptParser.ClassTailContext context);
	/// <summary>
	/// Visit a parse tree produced by <see cref="TypeScriptParser.classExtendsClause"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitClassExtendsClause([NotNull] TypeScriptParser.ClassExtendsClauseContext context);
	/// <summary>
	/// Visit a parse tree produced by <see cref="TypeScriptParser.implementsClause"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitImplementsClause([NotNull] TypeScriptParser.ImplementsClauseContext context);
	/// <summary>
	/// Visit a parse tree produced by <see cref="TypeScriptParser.classElement"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitClassElement([NotNull] TypeScriptParser.ClassElementContext context);
	/// <summary>
	/// Visit a parse tree produced by the <c>PropertyDeclarationExpression</c>
	/// labeled alternative in <see cref="TypeScriptParser.propertyMemberDeclaration"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitPropertyDeclarationExpression([NotNull] TypeScriptParser.PropertyDeclarationExpressionContext context);
	/// <summary>
	/// Visit a parse tree produced by the <c>MethodDeclarationExpression</c>
	/// labeled alternative in <see cref="TypeScriptParser.propertyMemberDeclaration"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitMethodDeclarationExpression([NotNull] TypeScriptParser.MethodDeclarationExpressionContext context);
	/// <summary>
	/// Visit a parse tree produced by the <c>GetterSetterDeclarationExpression</c>
	/// labeled alternative in <see cref="TypeScriptParser.propertyMemberDeclaration"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitGetterSetterDeclarationExpression([NotNull] TypeScriptParser.GetterSetterDeclarationExpressionContext context);
	/// <summary>
	/// Visit a parse tree produced by the <c>AbstractMemberDeclaration</c>
	/// labeled alternative in <see cref="TypeScriptParser.propertyMemberDeclaration"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitAbstractMemberDeclaration([NotNull] TypeScriptParser.AbstractMemberDeclarationContext context);
	/// <summary>
	/// Visit a parse tree produced by <see cref="TypeScriptParser.propertyMemberBase"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitPropertyMemberBase([NotNull] TypeScriptParser.PropertyMemberBaseContext context);
	/// <summary>
	/// Visit a parse tree produced by <see cref="TypeScriptParser.indexMemberDeclaration"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitIndexMemberDeclaration([NotNull] TypeScriptParser.IndexMemberDeclarationContext context);
	/// <summary>
	/// Visit a parse tree produced by <see cref="TypeScriptParser.generatorMethod"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitGeneratorMethod([NotNull] TypeScriptParser.GeneratorMethodContext context);
	/// <summary>
	/// Visit a parse tree produced by <see cref="TypeScriptParser.generatorFunctionDeclaration"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitGeneratorFunctionDeclaration([NotNull] TypeScriptParser.GeneratorFunctionDeclarationContext context);
	/// <summary>
	/// Visit a parse tree produced by <see cref="TypeScriptParser.generatorBlock"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitGeneratorBlock([NotNull] TypeScriptParser.GeneratorBlockContext context);
	/// <summary>
	/// Visit a parse tree produced by <see cref="TypeScriptParser.generatorDefinition"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitGeneratorDefinition([NotNull] TypeScriptParser.GeneratorDefinitionContext context);
	/// <summary>
	/// Visit a parse tree produced by <see cref="TypeScriptParser.iteratorBlock"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitIteratorBlock([NotNull] TypeScriptParser.IteratorBlockContext context);
	/// <summary>
	/// Visit a parse tree produced by <see cref="TypeScriptParser.iteratorDefinition"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitIteratorDefinition([NotNull] TypeScriptParser.IteratorDefinitionContext context);
	/// <summary>
	/// Visit a parse tree produced by <see cref="TypeScriptParser.formalParameterList"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitFormalParameterList([NotNull] TypeScriptParser.FormalParameterListContext context);
	/// <summary>
	/// Visit a parse tree produced by <see cref="TypeScriptParser.formalParameterArg"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitFormalParameterArg([NotNull] TypeScriptParser.FormalParameterArgContext context);
	/// <summary>
	/// Visit a parse tree produced by <see cref="TypeScriptParser.lastFormalParameterArg"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitLastFormalParameterArg([NotNull] TypeScriptParser.LastFormalParameterArgContext context);
	/// <summary>
	/// Visit a parse tree produced by <see cref="TypeScriptParser.functionBody"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitFunctionBody([NotNull] TypeScriptParser.FunctionBodyContext context);
	/// <summary>
	/// Visit a parse tree produced by <see cref="TypeScriptParser.sourceElements"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitSourceElements([NotNull] TypeScriptParser.SourceElementsContext context);
	/// <summary>
	/// Visit a parse tree produced by <see cref="TypeScriptParser.arrayLiteral"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitArrayLiteral([NotNull] TypeScriptParser.ArrayLiteralContext context);
	/// <summary>
	/// Visit a parse tree produced by <see cref="TypeScriptParser.elementList"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitElementList([NotNull] TypeScriptParser.ElementListContext context);
	/// <summary>
	/// Visit a parse tree produced by <see cref="TypeScriptParser.arrayElement"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitArrayElement([NotNull] TypeScriptParser.ArrayElementContext context);
	/// <summary>
	/// Visit a parse tree produced by <see cref="TypeScriptParser.objectLiteral"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitObjectLiteral([NotNull] TypeScriptParser.ObjectLiteralContext context);
	/// <summary>
	/// Visit a parse tree produced by the <c>PropertyExpressionAssignment</c>
	/// labeled alternative in <see cref="TypeScriptParser.propertyAssignment"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitPropertyExpressionAssignment([NotNull] TypeScriptParser.PropertyExpressionAssignmentContext context);
	/// <summary>
	/// Visit a parse tree produced by the <c>ComputedPropertyExpressionAssignment</c>
	/// labeled alternative in <see cref="TypeScriptParser.propertyAssignment"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitComputedPropertyExpressionAssignment([NotNull] TypeScriptParser.ComputedPropertyExpressionAssignmentContext context);
	/// <summary>
	/// Visit a parse tree produced by the <c>PropertyGetter</c>
	/// labeled alternative in <see cref="TypeScriptParser.propertyAssignment"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitPropertyGetter([NotNull] TypeScriptParser.PropertyGetterContext context);
	/// <summary>
	/// Visit a parse tree produced by the <c>PropertySetter</c>
	/// labeled alternative in <see cref="TypeScriptParser.propertyAssignment"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitPropertySetter([NotNull] TypeScriptParser.PropertySetterContext context);
	/// <summary>
	/// Visit a parse tree produced by the <c>MethodProperty</c>
	/// labeled alternative in <see cref="TypeScriptParser.propertyAssignment"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitMethodProperty([NotNull] TypeScriptParser.MethodPropertyContext context);
	/// <summary>
	/// Visit a parse tree produced by the <c>PropertyShorthand</c>
	/// labeled alternative in <see cref="TypeScriptParser.propertyAssignment"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitPropertyShorthand([NotNull] TypeScriptParser.PropertyShorthandContext context);
	/// <summary>
	/// Visit a parse tree produced by the <c>RestParameterInObject</c>
	/// labeled alternative in <see cref="TypeScriptParser.propertyAssignment"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitRestParameterInObject([NotNull] TypeScriptParser.RestParameterInObjectContext context);
	/// <summary>
	/// Visit a parse tree produced by <see cref="TypeScriptParser.getAccessor"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitGetAccessor([NotNull] TypeScriptParser.GetAccessorContext context);
	/// <summary>
	/// Visit a parse tree produced by <see cref="TypeScriptParser.setAccessor"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitSetAccessor([NotNull] TypeScriptParser.SetAccessorContext context);
	/// <summary>
	/// Visit a parse tree produced by <see cref="TypeScriptParser.propertyName"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitPropertyName([NotNull] TypeScriptParser.PropertyNameContext context);
	/// <summary>
	/// Visit a parse tree produced by <see cref="TypeScriptParser.arguments"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitArguments([NotNull] TypeScriptParser.ArgumentsContext context);
	/// <summary>
	/// Visit a parse tree produced by <see cref="TypeScriptParser.argumentList"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitArgumentList([NotNull] TypeScriptParser.ArgumentListContext context);
	/// <summary>
	/// Visit a parse tree produced by <see cref="TypeScriptParser.argument"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitArgument([NotNull] TypeScriptParser.ArgumentContext context);
	/// <summary>
	/// Visit a parse tree produced by <see cref="TypeScriptParser.expressionSequence"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitExpressionSequence([NotNull] TypeScriptParser.ExpressionSequenceContext context);
	/// <summary>
	/// Visit a parse tree produced by <see cref="TypeScriptParser.functionExpressionDeclaration"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitFunctionExpressionDeclaration([NotNull] TypeScriptParser.FunctionExpressionDeclarationContext context);
	/// <summary>
	/// Visit a parse tree produced by the <c>TemplateStringExpression</c>
	/// labeled alternative in <see cref="TypeScriptParser.singleExpression"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitTemplateStringExpression([NotNull] TypeScriptParser.TemplateStringExpressionContext context);
	/// <summary>
	/// Visit a parse tree produced by the <c>TernaryExpression</c>
	/// labeled alternative in <see cref="TypeScriptParser.singleExpression"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitTernaryExpression([NotNull] TypeScriptParser.TernaryExpressionContext context);
	/// <summary>
	/// Visit a parse tree produced by the <c>LogicalAndExpression</c>
	/// labeled alternative in <see cref="TypeScriptParser.singleExpression"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitLogicalAndExpression([NotNull] TypeScriptParser.LogicalAndExpressionContext context);
	/// <summary>
	/// Visit a parse tree produced by the <c>GeneratorsExpression</c>
	/// labeled alternative in <see cref="TypeScriptParser.singleExpression"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitGeneratorsExpression([NotNull] TypeScriptParser.GeneratorsExpressionContext context);
	/// <summary>
	/// Visit a parse tree produced by the <c>PreIncrementExpression</c>
	/// labeled alternative in <see cref="TypeScriptParser.singleExpression"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitPreIncrementExpression([NotNull] TypeScriptParser.PreIncrementExpressionContext context);
	/// <summary>
	/// Visit a parse tree produced by the <c>ObjectLiteralExpression</c>
	/// labeled alternative in <see cref="TypeScriptParser.singleExpression"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitObjectLiteralExpression([NotNull] TypeScriptParser.ObjectLiteralExpressionContext context);
	/// <summary>
	/// Visit a parse tree produced by the <c>InExpression</c>
	/// labeled alternative in <see cref="TypeScriptParser.singleExpression"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitInExpression([NotNull] TypeScriptParser.InExpressionContext context);
	/// <summary>
	/// Visit a parse tree produced by the <c>LogicalOrExpression</c>
	/// labeled alternative in <see cref="TypeScriptParser.singleExpression"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitLogicalOrExpression([NotNull] TypeScriptParser.LogicalOrExpressionContext context);
	/// <summary>
	/// Visit a parse tree produced by the <c>GenericTypes</c>
	/// labeled alternative in <see cref="TypeScriptParser.singleExpression"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitGenericTypes([NotNull] TypeScriptParser.GenericTypesContext context);
	/// <summary>
	/// Visit a parse tree produced by the <c>NotExpression</c>
	/// labeled alternative in <see cref="TypeScriptParser.singleExpression"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitNotExpression([NotNull] TypeScriptParser.NotExpressionContext context);
	/// <summary>
	/// Visit a parse tree produced by the <c>PreDecreaseExpression</c>
	/// labeled alternative in <see cref="TypeScriptParser.singleExpression"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitPreDecreaseExpression([NotNull] TypeScriptParser.PreDecreaseExpressionContext context);
	/// <summary>
	/// Visit a parse tree produced by the <c>ArgumentsExpression</c>
	/// labeled alternative in <see cref="TypeScriptParser.singleExpression"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitArgumentsExpression([NotNull] TypeScriptParser.ArgumentsExpressionContext context);
	/// <summary>
	/// Visit a parse tree produced by the <c>ThisExpression</c>
	/// labeled alternative in <see cref="TypeScriptParser.singleExpression"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitThisExpression([NotNull] TypeScriptParser.ThisExpressionContext context);
	/// <summary>
	/// Visit a parse tree produced by the <c>FunctionExpression</c>
	/// labeled alternative in <see cref="TypeScriptParser.singleExpression"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitFunctionExpression([NotNull] TypeScriptParser.FunctionExpressionContext context);
	/// <summary>
	/// Visit a parse tree produced by the <c>UnaryMinusExpression</c>
	/// labeled alternative in <see cref="TypeScriptParser.singleExpression"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitUnaryMinusExpression([NotNull] TypeScriptParser.UnaryMinusExpressionContext context);
	/// <summary>
	/// Visit a parse tree produced by the <c>AssignmentExpression</c>
	/// labeled alternative in <see cref="TypeScriptParser.singleExpression"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitAssignmentExpression([NotNull] TypeScriptParser.AssignmentExpressionContext context);
	/// <summary>
	/// Visit a parse tree produced by the <c>PostDecreaseExpression</c>
	/// labeled alternative in <see cref="TypeScriptParser.singleExpression"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitPostDecreaseExpression([NotNull] TypeScriptParser.PostDecreaseExpressionContext context);
	/// <summary>
	/// Visit a parse tree produced by the <c>TypeofExpression</c>
	/// labeled alternative in <see cref="TypeScriptParser.singleExpression"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitTypeofExpression([NotNull] TypeScriptParser.TypeofExpressionContext context);
	/// <summary>
	/// Visit a parse tree produced by the <c>InstanceofExpression</c>
	/// labeled alternative in <see cref="TypeScriptParser.singleExpression"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitInstanceofExpression([NotNull] TypeScriptParser.InstanceofExpressionContext context);
	/// <summary>
	/// Visit a parse tree produced by the <c>UnaryPlusExpression</c>
	/// labeled alternative in <see cref="TypeScriptParser.singleExpression"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitUnaryPlusExpression([NotNull] TypeScriptParser.UnaryPlusExpressionContext context);
	/// <summary>
	/// Visit a parse tree produced by the <c>DeleteExpression</c>
	/// labeled alternative in <see cref="TypeScriptParser.singleExpression"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitDeleteExpression([NotNull] TypeScriptParser.DeleteExpressionContext context);
	/// <summary>
	/// Visit a parse tree produced by the <c>GeneratorsFunctionExpression</c>
	/// labeled alternative in <see cref="TypeScriptParser.singleExpression"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitGeneratorsFunctionExpression([NotNull] TypeScriptParser.GeneratorsFunctionExpressionContext context);
	/// <summary>
	/// Visit a parse tree produced by the <c>ArrowFunctionExpression</c>
	/// labeled alternative in <see cref="TypeScriptParser.singleExpression"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitArrowFunctionExpression([NotNull] TypeScriptParser.ArrowFunctionExpressionContext context);
	/// <summary>
	/// Visit a parse tree produced by the <c>IteratorsExpression</c>
	/// labeled alternative in <see cref="TypeScriptParser.singleExpression"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitIteratorsExpression([NotNull] TypeScriptParser.IteratorsExpressionContext context);
	/// <summary>
	/// Visit a parse tree produced by the <c>EqualityExpression</c>
	/// labeled alternative in <see cref="TypeScriptParser.singleExpression"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitEqualityExpression([NotNull] TypeScriptParser.EqualityExpressionContext context);
	/// <summary>
	/// Visit a parse tree produced by the <c>BitXOrExpression</c>
	/// labeled alternative in <see cref="TypeScriptParser.singleExpression"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitBitXOrExpression([NotNull] TypeScriptParser.BitXOrExpressionContext context);
	/// <summary>
	/// Visit a parse tree produced by the <c>CastAsExpression</c>
	/// labeled alternative in <see cref="TypeScriptParser.singleExpression"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitCastAsExpression([NotNull] TypeScriptParser.CastAsExpressionContext context);
	/// <summary>
	/// Visit a parse tree produced by the <c>SuperExpression</c>
	/// labeled alternative in <see cref="TypeScriptParser.singleExpression"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitSuperExpression([NotNull] TypeScriptParser.SuperExpressionContext context);
	/// <summary>
	/// Visit a parse tree produced by the <c>MultiplicativeExpression</c>
	/// labeled alternative in <see cref="TypeScriptParser.singleExpression"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitMultiplicativeExpression([NotNull] TypeScriptParser.MultiplicativeExpressionContext context);
	/// <summary>
	/// Visit a parse tree produced by the <c>BitShiftExpression</c>
	/// labeled alternative in <see cref="TypeScriptParser.singleExpression"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitBitShiftExpression([NotNull] TypeScriptParser.BitShiftExpressionContext context);
	/// <summary>
	/// Visit a parse tree produced by the <c>ParenthesizedExpression</c>
	/// labeled alternative in <see cref="TypeScriptParser.singleExpression"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitParenthesizedExpression([NotNull] TypeScriptParser.ParenthesizedExpressionContext context);
	/// <summary>
	/// Visit a parse tree produced by the <c>AdditiveExpression</c>
	/// labeled alternative in <see cref="TypeScriptParser.singleExpression"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitAdditiveExpression([NotNull] TypeScriptParser.AdditiveExpressionContext context);
	/// <summary>
	/// Visit a parse tree produced by the <c>RelationalExpression</c>
	/// labeled alternative in <see cref="TypeScriptParser.singleExpression"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitRelationalExpression([NotNull] TypeScriptParser.RelationalExpressionContext context);
	/// <summary>
	/// Visit a parse tree produced by the <c>PostIncrementExpression</c>
	/// labeled alternative in <see cref="TypeScriptParser.singleExpression"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitPostIncrementExpression([NotNull] TypeScriptParser.PostIncrementExpressionContext context);
	/// <summary>
	/// Visit a parse tree produced by the <c>YieldExpression</c>
	/// labeled alternative in <see cref="TypeScriptParser.singleExpression"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitYieldExpression([NotNull] TypeScriptParser.YieldExpressionContext context);
	/// <summary>
	/// Visit a parse tree produced by the <c>BitNotExpression</c>
	/// labeled alternative in <see cref="TypeScriptParser.singleExpression"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitBitNotExpression([NotNull] TypeScriptParser.BitNotExpressionContext context);
	/// <summary>
	/// Visit a parse tree produced by the <c>NewExpression</c>
	/// labeled alternative in <see cref="TypeScriptParser.singleExpression"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitNewExpression([NotNull] TypeScriptParser.NewExpressionContext context);
	/// <summary>
	/// Visit a parse tree produced by the <c>LiteralExpression</c>
	/// labeled alternative in <see cref="TypeScriptParser.singleExpression"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitLiteralExpression([NotNull] TypeScriptParser.LiteralExpressionContext context);
	/// <summary>
	/// Visit a parse tree produced by the <c>ArrayLiteralExpression</c>
	/// labeled alternative in <see cref="TypeScriptParser.singleExpression"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitArrayLiteralExpression([NotNull] TypeScriptParser.ArrayLiteralExpressionContext context);
	/// <summary>
	/// Visit a parse tree produced by the <c>MemberDotExpression</c>
	/// labeled alternative in <see cref="TypeScriptParser.singleExpression"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitMemberDotExpression([NotNull] TypeScriptParser.MemberDotExpressionContext context);
	/// <summary>
	/// Visit a parse tree produced by the <c>ClassExpression</c>
	/// labeled alternative in <see cref="TypeScriptParser.singleExpression"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitClassExpression([NotNull] TypeScriptParser.ClassExpressionContext context);
	/// <summary>
	/// Visit a parse tree produced by the <c>MemberIndexExpression</c>
	/// labeled alternative in <see cref="TypeScriptParser.singleExpression"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitMemberIndexExpression([NotNull] TypeScriptParser.MemberIndexExpressionContext context);
	/// <summary>
	/// Visit a parse tree produced by the <c>IdentifierExpression</c>
	/// labeled alternative in <see cref="TypeScriptParser.singleExpression"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitIdentifierExpression([NotNull] TypeScriptParser.IdentifierExpressionContext context);
	/// <summary>
	/// Visit a parse tree produced by the <c>BitAndExpression</c>
	/// labeled alternative in <see cref="TypeScriptParser.singleExpression"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitBitAndExpression([NotNull] TypeScriptParser.BitAndExpressionContext context);
	/// <summary>
	/// Visit a parse tree produced by the <c>BitOrExpression</c>
	/// labeled alternative in <see cref="TypeScriptParser.singleExpression"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitBitOrExpression([NotNull] TypeScriptParser.BitOrExpressionContext context);
	/// <summary>
	/// Visit a parse tree produced by the <c>AssignmentOperatorExpression</c>
	/// labeled alternative in <see cref="TypeScriptParser.singleExpression"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitAssignmentOperatorExpression([NotNull] TypeScriptParser.AssignmentOperatorExpressionContext context);
	/// <summary>
	/// Visit a parse tree produced by the <c>VoidExpression</c>
	/// labeled alternative in <see cref="TypeScriptParser.singleExpression"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitVoidExpression([NotNull] TypeScriptParser.VoidExpressionContext context);
	/// <summary>
	/// Visit a parse tree produced by <see cref="TypeScriptParser.asExpression"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitAsExpression([NotNull] TypeScriptParser.AsExpressionContext context);
	/// <summary>
	/// Visit a parse tree produced by <see cref="TypeScriptParser.arrowFunctionDeclaration"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitArrowFunctionDeclaration([NotNull] TypeScriptParser.ArrowFunctionDeclarationContext context);
	/// <summary>
	/// Visit a parse tree produced by <see cref="TypeScriptParser.arrowFunctionParameters"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitArrowFunctionParameters([NotNull] TypeScriptParser.ArrowFunctionParametersContext context);
	/// <summary>
	/// Visit a parse tree produced by <see cref="TypeScriptParser.arrowFunctionBody"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitArrowFunctionBody([NotNull] TypeScriptParser.ArrowFunctionBodyContext context);
	/// <summary>
	/// Visit a parse tree produced by <see cref="TypeScriptParser.assignmentOperator"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitAssignmentOperator([NotNull] TypeScriptParser.AssignmentOperatorContext context);
	/// <summary>
	/// Visit a parse tree produced by <see cref="TypeScriptParser.literal"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitLiteral([NotNull] TypeScriptParser.LiteralContext context);
	/// <summary>
	/// Visit a parse tree produced by <see cref="TypeScriptParser.numericLiteral"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitNumericLiteral([NotNull] TypeScriptParser.NumericLiteralContext context);
	/// <summary>
	/// Visit a parse tree produced by <see cref="TypeScriptParser.identifierName"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitIdentifierName([NotNull] TypeScriptParser.IdentifierNameContext context);
	/// <summary>
	/// Visit a parse tree produced by <see cref="TypeScriptParser.identifierOrKeyWord"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitIdentifierOrKeyWord([NotNull] TypeScriptParser.IdentifierOrKeyWordContext context);
	/// <summary>
	/// Visit a parse tree produced by <see cref="TypeScriptParser.reservedWord"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitReservedWord([NotNull] TypeScriptParser.ReservedWordContext context);
	/// <summary>
	/// Visit a parse tree produced by <see cref="TypeScriptParser.keyword"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitKeyword([NotNull] TypeScriptParser.KeywordContext context);
	/// <summary>
	/// Visit a parse tree produced by <see cref="TypeScriptParser.getter"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitGetter([NotNull] TypeScriptParser.GetterContext context);
	/// <summary>
	/// Visit a parse tree produced by <see cref="TypeScriptParser.setter"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitSetter([NotNull] TypeScriptParser.SetterContext context);
	/// <summary>
	/// Visit a parse tree produced by <see cref="TypeScriptParser.eos"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitEos([NotNull] TypeScriptParser.EosContext context);
}
